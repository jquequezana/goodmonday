.row
	.span6
		%table.table.table-striped.table-bordered.table-condensed
			%thead
				%tr
					%th= t("simple_form.options.filter.group_by.#{@group_by}")
					%th Сумма
					%th Количество
					%th
			%tbody
				- if @achievements_data
					- total_amount = 0
					- total_count = 0
					- @achievements_data.each do |data|
						- amount = case current_user.class
							- when Webmaster
								- data['webmaster_amount_cents_sum'].to_f
							- when Advertiser
								- data['advertiser_amount_cents_sum'].to_f
						- ids = data['_id_push']
						- count = ids ? ids.size : 0
						- total_amount += amount
						- total_count += count
						%tr
							%td
								- case @group_by
									- when :created_at, :accepted_at
										= data['_id'] if data['_id']
									- when :webmaster_amount_cents, :advertiser_amount_cents, :amount
										= number_to_currency(data['_id']/100.0)
									- else
										- obj = @group_by.to_s.split('_').first.camelcase.constantize.where(:_id => data['_id']).first
										- if obj
											= obj.title
							%td= number_to_currency(amount/100.0)
							%td= count
							%td
								- if ids
									- ids.each do |id|
										= link_to 'открыть', achievement_path(id)
					%tr
						%th Итого:
						%td= number_to_currency(total_amount/100.0)
						%td= total_count

	.span3
		.well
			%b Фильтрация
			%br
			%br
			= simple_form_for :filter, :method => :get, :defaults => { :input_html => { :class => 'spanm' } } do |f|
				= f.input :created_at_start, :input_html => { :value => @created_at_start, :class => 'date_picker spanm' }
				= f.input :created_at_stop, :input_html => { :value => @created_at_stop, :class => 'date_picker spanm' }
				-#= f.input :accepted_at_start, :input_html => { :value => @accepted_at_start, :class => 'date_picker spanm' }
				-#= f.input :accepted_at_stop, :input_html => { :value => @accepted_at_stop, :class => 'date_picker spanm' }
				= f.input :state, :collection => Achievement.get_state_values, :include_blank => true, :selected => @state
				- case current_user.class
					- when Webmaster
						= f.input :ground, :collection => current_user.grounds, :include_blank => true, :selected => @ground_id
					- when Advertiser
				= f.input :offer, :collection => current_user.usable_offers, :include_blank => true, :selected => @offer_id
				= f.input :group_by, :collection => [:created_at, :accepted_at, :offer_id, :ground_id, :amount], :selected => @group_by

				= f.submit 'Фильтровать', :class => 'btn'
.subnav
	%ul.nav.nav-pills
		%li.active= link_to 'Home', ground_path(@ground)
		%li.dropdown
			= link_to '#', :class => 'dropdown-toggle' do
				= 'Links'
				%b.caret
			%ul.dropdown-menu
				%li= link_to 'Accepted', ground_links_path(@ground, :state => :accepted)
				%li= link_to 'Denied', ground_links_path(@ground, :state => :denied)
				%li= link_to 'Pending', ground_links_path(@ground, :state => :pending)
				- if @ground.is_accepted?
					%li.divider
					%li= link_to 'Добавить', new_ground_link_path(@ground)
		%li.dropdown
			= link_to '#', :class => 'dropdown-toggle' do
				= 'Rotator'
				%b.caret
			%ul.dropdown-menu
				%li= link_to 'Accepted', ground_adverts_path(@ground, :state => :accepted)
				%li= link_to 'Denied', ground_adverts_path(@ground, :state => :denied)
				%li= link_to 'Pending', ground_adverts_path(@ground, :state => :pending)
				- if @ground.is_accepted?
					%li.divider
					%li= link_to 'Добавить', new_ground_advert_path(@ground)

- auto_mode = (@ground.rotator_mode==:auto)
%h3= 'Настройки подбора банеров:'
= simple_form_for(@ground, :html => {:class => 'form-horizontal' }) do |f|
	.control-group= f.input :rotator_mode, :required => true, :as => :select, :collection => Ground.get_rotator_mode_values, :input_html => { :class => "span6" }
	= f.fields_for @ground.ground_rotator_config do |cf|
		.auto_mode_fields{:style => auto_mode ? 'display:block' : 'display:none'}
			.control-group= cf.input :categories, :collection => Category.all, :input_html => { :multiple => true, :class => "span6"}
			.control-group= cf.input :block_adult, :as => :boolean, :input_html => { :class => "span6" }
			.control-group= cf.input :block_doubtful, :as => :boolean, :input_html => { :class => "span6" }
	= f.button :submit, :class => 'btn-primary'

:javascript
	$(document).ready(function() {
		$('#ground_rotator_mode').change(function () {
			var rotator_mode = $(this).val();
			var auto_mode = (rotator_mode=='auto')
			var form = $(this).closest("form");
			var auto_mode_fields = form.find('.auto_mode_fields');
			auto_mode_fields.toggle(auto_mode);
			auto_mode_fields.find('input').prop('disabled', !auto_mode);
		});
	});
%section
	.page-header
		%h1= "Проверка"
	.row
		-#= @moderation.moderated.inspect
		- moderated_class = @moderation.moderated_type.constantize
		.span12
			%b= 'Дата: '
			= @moderation.updated_at
			%br
			%b= 'Статус: '
			= @moderation.state
			%br
			%b= 'Причина: '
			= @moderation.reason
			%br
			%b= 'Тип объекта: '
			= @moderation.moderated_type
			%hr
			- if @moderation.state==:pending
				%h2= 'Изменения'
				%table.table.table-bordered.table-striped
					%thead
						%tr
							%th= 'Поле'
							%th= 'Значение'
							%th= 'Утверждённое значение'
					%tbody
						- @moderation.changed_fields.keys.each do |key|
							- changed_value = @moderation.changed_fields[key]
							- accepted_value = @moderation.accepted_fields[key]
							- type = :default
							- if changed_value.class==BSON::ObjectId && key[-3..-1]=='_id'
								- klass = key[0..-4].camelize.constantize
								- type = :association
							- elsif moderated_class::MODERATED_ATTRS_INFO && moderated_class::MODERATED_ATTRS_INFO[key]
								- attr_info = moderated_class::MODERATED_ATTRS_INFO[key]
								- type = attr_info[:type]
							%tr
								%td= key.to_s
								%td
									- if changed_value
										- case type
											- when :association
												= klass.find(changed_value).title
											- when :carrierwave_image
												= changed_value
												%br
												- show_method = attr_info[:show_method] ? attr_info[:show_method] : key
												= image_tag @moderation.moderated_object.method(show_method).call
											- else
												= changed_value
								%td
									- if accepted_value
										- case type
											- when :association
												= klass.find(accepted_value).title
											- else
												= accepted_value

				= link_to admin_moderation_accept_path(@moderation), :class => 'btn btn-success' do
					%i.icon-ok.icon-white
					= 'Одобрить'
				= link_to admin_moderation_deny_path(@moderation), :class => 'btn btn-danger' do
					%i.icon-remove.icon-white
					= 'Отказать'
				%hr
	.row
		.span6
			%h3= 'Последние изменения'
			%table.table.table-bordered.table-striped
				%thead
					%tr
						%th= 'Дата'
						%th= 'Поля'
				%tbody
					- @moderation.moderation_field_changes.each do |change|
						%tr
							%td= change.created_at
							%td= change.changed_fields.keys.to_sentence
		.span6
			%h3= 'Последние проверки'
			%table.table.table-bordered.table-striped
				%thead
					%tr
						%th= 'Дата'
						%th= 'Статус'
						%th= 'Проверяющий'
				%tbody
					- @moderation.moderation_state_changes.each do |change|
						%tr
							%td= change.created_at
							%td= change.state
							%td= change.operator_id
			-#.subnav
			-#	%ul.nav.nav-pills
			-#		%li.active= link_to 'Home', my_ground_path(@ground)
			-#		%li.dropdown
			-#			= link_to '#', :class => 'dropdown-toggle' do
			-#				= 'Links'
			-#				%b.caret
			-#			%ul.dropdown-menu
			-#				%li= link_to 'Accepted', my_ground_links_path(@ground, :state => :accepted)
			-#				%li= link_to 'Denied', my_ground_links_path(@ground, :state => :denied)
			-#				%li= link_to 'Pending', my_ground_links_path(@ground, :state => :pending)
			-#				%li.divider
			-#				%li= link_to 'Добавить', new_my_ground_link_path(@ground)
			-#		%li.dropdown
			-#			= link_to '#', :class => 'dropdown-toggle' do
			-#				= 'Rotator'
			-#				%b.caret
			-#			%ul.dropdown-menu
			-#				%li= link_to 'Accepted', my_ground_adverts_path(@ground, :state => :accepted)
			-#				%li= link_to 'Denied', my_ground_adverts_path(@ground, :state => :denied)
			-#				%li= link_to 'Pending', my_ground_adverts_path(@ground, :state => :pending)
			-#				%li.divider
			-#				%li= link_to 'Добавить', new_my_ground_advert_path(@ground)
			-#= ' // Настройки'